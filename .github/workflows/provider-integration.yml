name: Provider Integration Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 */6 * * *'  # Run every 6 hours to catch API changes
  workflow_dispatch:  # Allow manual runs

jobs:
  test-individual-providers:
    name: Test ${{ matrix.provider }} SDK
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - provider: OpenAI
            env_key: OPENAI_API_KEY
            test_model: gpt-3.5-turbo
          - provider: Anthropic
            env_key: ANTHROPIC_API_KEY
            test_model: claude-3-haiku-20240307
          - provider: Google
            env_key: GOOGLE_API_KEY
            test_model: gemini-1.5-flash
          - provider: Cohere
            env_key: COHERE_API_KEY
            test_model: command-r
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
    
    - name: Install dependencies
      run: |
        uv venv
        source .venv/bin/activate
        uv pip install -e ".[dev]"
        
        # Install provider-specific SDK
        if [ "${{ matrix.provider }}" = "OpenAI" ]; then
          uv pip install openai
        elif [ "${{ matrix.provider }}" = "Anthropic" ]; then
          uv pip install anthropic
        elif [ "${{ matrix.provider }}" = "Google" ]; then
          uv pip install google-generativeai
        elif [ "${{ matrix.provider }}" = "Cohere" ]; then
          uv pip install cohere
        fi
    
    - name: Test ${{ matrix.provider }} Integration
      env:
        CMDRDATA_API_KEY: ${{ secrets.CMDRDATA_API_KEY }}
        ${{ matrix.env_key }}: ${{ secrets[matrix.env_key] }}
      run: |
        # Run the specific provider test
        provider_lower=$(echo "${{ matrix.provider }}" | tr '[:upper:]' '[:lower:]')
        uv run pytest tests/test_provider_integration.py::TestProviderIntegration::test_${provider_lower}_integration -v -s
      continue-on-error: true

  end-to-end-flow:
    name: Full E2E Flow Test
    runs-on: ubuntu-latest
    needs: test-individual-providers
    if: always()
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
    
    - name: Install all dependencies
      run: |
        uv venv
        source .venv/bin/activate
        uv pip install -e ".[dev]"
        uv pip install openai anthropic google-generativeai cohere
    
    - name: Run Complete E2E Test
      env:
        CMDRDATA_API_KEY: ${{ secrets.CMDRDATA_API_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        COHERE_API_KEY: ${{ secrets.COHERE_API_KEY }}
      run: |
        uv run pytest tests/test_e2e_providers.py -v -s
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: e2e-test-results
        path: |
          e2e_results.json

  notify-results:
    name: Notify Results
    runs-on: ubuntu-latest
    needs: [test-individual-providers, end-to-end-flow]
    if: always()
    
    steps:
    - name: Summary
      run: |
        echo "## Provider Integration Test Results"
        echo "Individual Provider Tests: ${{ needs.test-individual-providers.result }}"
        echo "End-to-End Flow: ${{ needs.end-to-end-flow.result }}"
        
        if [ "${{ needs.end-to-end-flow.result }}" = "success" ]; then
          echo "[OK] All provider integrations working!"
        else
          echo "[WARNING] Some provider integrations need attention"
        fi